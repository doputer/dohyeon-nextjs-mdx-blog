{"componentChunkName":"component---src-templates-blog-post-js","path":"/article/difference-between-structure-and-class/","result":{"data":{"site":{"siteMetadata":{"title":"DOPUTER","author":"김도현","siteUrl":"https://doputer.github.io","comment":{"disqusShortName":"","utterances":"doputer/doputer.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"aac04585-dabc-5b49-bbe5-524b0d357f9a","excerpt":"C 언어를 공부하다가 구조체라는 개념을 접하게 되고, C++ 언어를 공부하다가 클래스라는 개념을 접하게 된다. 절차 지향 언어에서 객체 지향 언어로 넘어가게 되면 클래스와 객체가 아주 중요한 개념이라는 것을 알게 되는데 사실 C 언어에서 배운 구조체와 큰 차이가 없다. 구조체와 클래스 간단한 구조체를 C++ 언어로 구현하였다. 사실 구조체와 클래스 모두 데이터를 묶을 수 있는 명령어이다. 여기서 구조체를 클래스로 바꾸고 싶으면 struct를 지우고 class…","html":"<p>C 언어를 공부하다가 구조체라는 개념을 접하게 되고, C++ 언어를 공부하다가 클래스라는 개념을 접하게 된다. 절차 지향 언어에서 객체 지향 언어로 넘어가게 되면 클래스와 객체가 아주 중요한 개념이라는 것을 알게 되는데 사실 C 언어에서 배운 구조체와 큰 차이가 없다.</p>\n<h2 id=\"구조체와-클래스\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%A1%B0%EC%B2%B4%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"구조체와 클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구조체와 클래스</h2>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Point</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> xpos<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> ypos<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tPoint point <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\tcout <span class=\"token operator\">&lt;&lt;</span> point<span class=\"token punctuation\">.</span>xpos <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span> <span class=\"token operator\">&lt;&lt;</span> point<span class=\"token punctuation\">.</span>ypos <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>간단한 구조체를 C++ 언어로 구현하였다. 사실 구조체와 클래스 모두 <strong>데이터를 묶을 수 있는 명령어</strong>이다. 여기서 구조체를 클래스로 바꾸고 싶으면 <strong>struct</strong>를 지우고 <strong>class</strong>로 바꿔주면 된다. 그러나 바로 오류가 발생하는데 둘 다 기능도 같고, 선언도 동일한데 어디서 이런 오류가 발생했을까?</p>\n<h2 id=\"접근-제어-지시자\" style=\"position:relative;\"><a href=\"#%EC%A0%91%EA%B7%BC-%EC%A0%9C%EC%96%B4-%EC%A7%80%EC%8B%9C%EC%9E%90\" aria-label=\"접근 제어 지시자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>접근 제어 지시자</h2>\n<p>C++ 언어의 접근 제어 지시자는 다음과 같이 세 가지가 있다.</p>\n\n      <div class=\"remark-sticky-table\"> \n      <div class=\"remark-sticky-table-wrapper\" style=\"width: 100%; height: 100%; overflow: auto;\">\n          <table class=\"remark-sticky-table-table\">\n      \n            \n               <thead class=\"remark-sticky-table-thead\">\n                     <tr class=\"remark-sticky-table-tr\">\n                     <th class=\"remark-sticky-table-th\" style=\"position: sticky; display: table-cell; width: auto; min-width: auto; white-space: nowrap; top: 0px; z-index: 2;\">접근 제어 지시자</th><th class=\"remark-sticky-table-th\" style=\"position: sticky; display: table-cell; width: auto; min-width: auto; white-space: nowrap; top: 0px; z-index: 2;\">허용 범위</th>\n                        </tr> \n                        </thead><tbody class=\"remark-sticky-table-tbody\">\n                     <tr class=\"remark-sticky-table-tr\">\n                          <td class=\"remark-sticky-table-td\">public</td><td class=\"remark-sticky-table-td\">어디서든 접근 허용</td>\n                         </tr>\n                         </tbody><tbody class=\"remark-sticky-table-tbody\">\n                     <tr class=\"remark-sticky-table-tr\">\n                          <td class=\"remark-sticky-table-td\">protected</td><td class=\"remark-sticky-table-td\">상속 관계에서 유도 클래스의 접근 허용</td>\n                         </tr>\n                         </tbody><tbody class=\"remark-sticky-table-tbody\">\n                     <tr class=\"remark-sticky-table-tr\">\n                          <td class=\"remark-sticky-table-td\">private</td><td class=\"remark-sticky-table-td\">클래스 내에서만 접근 허용</td>\n                         </tr>\n                         </tbody>\n               \n        \n          </table>\n      </div>\n    </div>\n  \n<p>구조체의 경우 접근 제어 지시자를 따로 선언하지 않으면 모든 객체와 메서드는 <strong>public</strong>으로 선언된다. 클래스의 경우 접근 제어 지시자를 따로 선언하지 않으면 모든 객체와 메서드는 <strong>private</strong>로 선언된다.</p>\n<p>즉, 발생한 오류는 클래스의 접근 제어 지시자를 따로 명시해주지 않았기 때문에 접근이 불가능해서 생긴 오류이다. 따라서 다음과 같이 코드를 수정해주면 오류가 해결된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n\nclass Point\n<span class=\"token punctuation\">{</span>\npublic<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">int</span> xpos<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> ypos<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tPoint point <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\tcout <span class=\"token operator\">&lt;&lt;</span> point<span class=\"token punctuation\">.</span>xpos <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span> <span class=\"token operator\">&lt;&lt;</span> point<span class=\"token punctuation\">.</span>ypos <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>기능면에서 구조체와 클래스의 차이는 없다. 둘 다 데이터를 묶는 동일한 역할을 한다. 그러나 문법적으로 <strong>struct</strong>로 선언하느냐 <strong>class</strong>로 선언하느냐에 따라 접근 제어 지시자를 고려해주어야 한다.</p>","frontmatter":{"title":"구조체와 클래스의 차이 🔀"}}},"pageContext":{"slug":"/article/difference-between-structure-and-class/","previous":{"fields":{"slug":"/algorithm/check-time-complexity-visually/"},"frontmatter":{"title":"시간 복잡도 가시적으로 확인해보기 👀"}},"next":{"fields":{"slug":"/article/about-victim-cache/"},"frontmatter":{"title":"Victim cache에 관하여 🧱"}}}}}